openAPI {
  enabled = true

  webServer {
    ioThreads = 1
    workerThreads = 8

    # Host and port to open the port on listening for HTTP connections
    # Default is the loopback interface for added security in case of accidental deployment or misconfiguration
    # CORDAPTOR_API_LISTEN_ADDRESS environment variable, if set, would override default value below
    listenAddress = "127.0.0.1:8500"
    listenAddress = ${?CORDAPTOR_API_LISTEN_ADDRESS}

    # Externally accessible endpoint for the API
    # Default uses the same host and port as the listenAddress
    # It may differ from listenAddress if there is a reverse proxy in front of the API endpoint, or port mapping is used
    externalAddress = ${openAPI.webServer.listenAddress}
    externalAddress = ${?CORDAPTOR_API_EXTERNAL_ADDRESS}

    # Whether externally accessible endpoint for the API uses SSL
    # Default assumes that the endpoint is secure if SSL is enabled for the API endpoint itself
    # This is possible if there is an SSL-terminating reverse proxy in front of the API endpoint
    sslOnExternalAddress = ${openAPI.webServer.ssl.enabled}
    sslOnExternalAddress = ${?CORDAPTOR_API_EXTERNAL_ADDRESS_SECURE}

    ssl {
      enabled = false
      enabled = ${?CORDAPTOR_API_SSL_ENABLED}

      # name parameter for SSLContext.getInstance(), uses TLS if unspecified
      # sslContextName

      # provider parameter for SSLContext.getInstance(), uses default if unspecified; ignored if sslContextName isn't set
      # sslContextProvider

      # Parameter for KeyManagerFactory.getInstance(), uses KeyManagerFactory.getDefaultAlgorithm() if unspecified
      # keyManagerFactoryAlgo

      # Keystore provider parameter for KeyStore.getInstance(), uses default if unspecified
      # keyStoreProvider

      # Keystore file location
      keyStoreLocation = ${?CORDAPTOR_API_SSL_KEYSTORE_LOCATION}

      # Keystore file password
      keyStorePassword = ${?CORDAPTOR_API_SSL_KEYSTORE_PASSWORD}

      # Keystore type parameter for KeyStore.getInstance(), uses JKS if unspecified
      # keyStoreType

      # Parameter for TrustManagerFactory.getInstance(), uses TrustManagerFactory.getDefaultAlgorithm() if unspecified
      # trustManagerFactoryAlgo

      # Keystore provider parameter for KeyStore.getInstance(), uses default if unspecified
      # trustStoreProvider

      # Truststore file location
      trustStoreLocation = ${?CORDAPTOR_API_SSL_TRUSTSTORE_LOCATION}

      # Truststore file password
      trustStorePassword = ${?CORDAPTOR_API_SSL_TRUSTSTORE_PASSWORD}

      # Truststore type parameter for KeyStore.getInstance(), uses JKS if unspecified
      # trustStoreType
    }
  }

  # Flow snapshots endpoint allows to query latest snapshot of a flow using its run id
  # regardless of whether the flow is completed or still running
  flowSnapshots {
    # default fallback is to disable the endpoint
    enabled = false
    # if local-cache module is present in classpath, flow results endpoint will be enabled if the cache is enabled
    enabled = ${?localCache.enabled}
  }

  spec {
    enabled = true
  }

  swaggerUI {
    enabled = true
  }

  security {
    handler = none
    handler = ${?CORDAPTOR_API_SECURITY_HANDLER}

    # handler = apiKey
    apiKey {
      # if the value is an empty list, a random API key will be generated and printed to the log
      # multiple keys could be added to allow graceful rotation
      keys = [ ${?CORDAPTOR_API_KEY} ]
      header = X-API-Key
    }
  }

  vaultQueries {
    # Absolute maximum page size for querying the vault
    maxPageSize = 500
  }

  flowInitiation {
    # Absolute maximum timeout for the request to avoid wasting server resources
    maxTimeout = 10m
  }
}