buildscript {
    ext {
        corda_release_group = "net.corda"
        corda_core_release_group = "net.corda"
        corda_release_version = getProperty("corda_release_version")
        corda_core_release_version = getProperty("corda_core_release_version")
        corda_gradle_plugins_version = getProperty("corda_gradle_plugins_version")
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id 'net.corda.plugins.cordapp' version '5.0.12'
    id 'net.corda.plugins.cordformation' version '5.0.12'
    id 'org.jetbrains.dokka' version "1.4.10.2"
    id 'maven-publish'
    id 'signing'
}

def moduleProjects = subprojects.findAll { gradle.ext.moduleProjects.contains(it.name) }

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
        maven { url 'https://repo.gradle.org/gradle/libs-releases' }

        // Cordaptor snapshots are published here
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
}

subprojects {
    group = 'tech.b180.cordaptor'
    version = getProperty("cordaptor_version")

    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true
        }
    }

    jar {
        // This makes the JAR's SHA-256 hash repeatable.
        preserveFileTimestamps = false
        reproducibleFileOrder = true

        archivesBaseName = "cordaptor-${project.name}"
    }
}

// applying common configuration to modules that produce artifacts
// which we publish to Maven Central
configure(moduleProjects) {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from "${rootProject.projectDir}/etc/no-javadocs.txt"
    }

    publishing {
        publications {
            maven(MavenPublication) {
                artifactId = "cordaptor-${project.name}"

                from components.java

                artifact sourcesJar
                artifact javadocJar

                pom {
                    url = "https://github.com/b180tech/cordaptor"
                    licenses {
                        license {
                            name = "GNU Affero General Public License v3.0 or later"
                            url = "https://spdx.org/licenses/AGPL-3.0-or-later"
                        }
                    }
                    developers {
                        developer {
                            id = "bond180"
                            name = "Bond180 Limited"
                            email = "devops@bond180.com"
                        }
                    }
                    scm {
                        connection = "scm:git:git://github.com/b180tech/cordaptor.git"
                        developerConnection = "scm:git:ssh://github.com:b180tech/cordaptor.git"
                        url = "https://github.com/b180tech/cordaptor"
                    }
                }
            }
        }

        repositories {
            maven {
                credentials {
                    username project.sonatypeOssUsername
                    password project.sonatypeOssPassword
                }

                name = "central"

                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }

    signing {
        required { version.endsWith('SNAPSHOT') }
        sign publishing.publications.maven
    }
}
